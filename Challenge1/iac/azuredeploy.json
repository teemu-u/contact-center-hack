{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.30.23.60470",
      "templateHash": "18327215168093153896"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "eastus",
      "allowedValues": [
        "eastus"
      ],
      "metadata": {
        "description": "Azure location where resources should be deployed (e.g., swedencentral)"
      }
    }
  },
  "variables": {
    "prefix": "hackai",
    "suffix": "[uniqueString(resourceGroup().id)]",
    "databaseAccountName": "[format('{0}-cosmosdb-{1}', variables('prefix'), variables('suffix'))]",
    "databaseName": "callcenter",
    "databaseContainerName": "calls",
    "locations": [
      {
        "locationName": "[parameters('location')]",
        "failoverPriority": 0,
        "isZoneRedundant": false
      }
    ],
    "appHostingPlanName": "[format('{0}-appservice-asp-{1}', variables('prefix'), variables('suffix'))]",
    "appName": "[format('{0}-appservice-{1}', variables('prefix'), variables('suffix'))]",
    "appLogAnalyticsWorkspaceName": "[format('{0}-loganalytics-{1}', variables('prefix'), variables('suffix'))]",
    "appApplicationInsightsName": "[format('{0}-appinsights-{1}', variables('prefix'), variables('suffix'))]",
    "searchServiceName": "[format('{0}-search-{1}', variables('prefix'), variables('suffix'))]",
    "aiCognitiveServicesName": "[format('{0}-aiservices-{1}', variables('prefix'), variables('suffix'))]",
    "aiKeyvaultName": "[replace(format('{0}-kv-{1}', variables('prefix'), variables('suffix')), '-', '')]",
    "aiStorageAccountName": "[replace(format('{0}-strg-{1}', variables('prefix'), variables('suffix')), '-', '')]",
    "aiHubName": "[format('{0}-aistudio-{1}', variables('prefix'), variables('suffix'))]",
    "aiHubFriendlyName": "GenAI Call Center AI Studio",
    "aiHubDescription": "This is an example AI resource for use in Azure AI Studio.",
    "aiHubProjectName": "CallCenter"
  },
  "resources": [
    {
      "type": "Microsoft.MachineLearningServices/workspaces/connections",
      "apiVersion": "2024-07-01-preview",
      "name": "[format('{0}/{1}', variables('aiHubName'), format('{0}-aiservices', variables('aiHubName')))]",
      "properties": {
        "category": "AIServices",
        "target": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('aiCognitiveServicesName')), '2023-05-01').endpoint]",
        "authType": "ApiKey",
        "isSharedToAll": true,
        "useWorkspaceManagedIdentity": true,
        "credentials": {
          "key": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('aiCognitiveServicesName')), '2023-05-01').key1]"
        },
        "metadata": {
          "ApiType": "Azure",
          "ResourceId": "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiCognitiveServicesName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiCognitiveServicesName'))]",
        "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiHubName'))]"
      ]
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces/connections",
      "apiVersion": "2024-07-01-preview",
      "name": "[format('{0}/{1}', variables('aiHubName'), format('{0}-search', variables('aiHubName')))]",
      "properties": {
        "category": "CognitiveSearch",
        "target": "[format('https://{0}.search.windows.net', variables('searchServiceName'))]",
        "authType": "ApiKey",
        "isSharedToAll": true,
        "useWorkspaceManagedIdentity": true,
        "credentials": {
          "key": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('searchServiceName')), '2023-11-01').primaryKey]"
        },
        "metadata": {
          "ApiType": "Azure",
          "ResourceId": "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiCognitiveServicesName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiCognitiveServicesName'))]",
        "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiHubName'))]",
        "[resourceId('Microsoft.Search/searchServices', variables('searchServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2024-05-15",
      "name": "[variables('databaseAccountName')]",
      "kind": "GlobalDocumentDB",
      "location": "[parameters('location')]",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "locations": "[variables('locations')]",
        "databaseAccountOfferType": "Standard",
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": false,
        "disableLocalAuth": false
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2024-05-15",
      "name": "[format('{0}/{1}', variables('databaseAccountName'), variables('databaseName'))]",
      "properties": {
        "resource": {
          "id": "[variables('databaseName')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('databaseAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2024-05-15",
      "name": "[format('{0}/{1}/{2}', variables('databaseAccountName'), variables('databaseName'), variables('databaseContainerName'))]",
      "properties": {
        "resource": {
          "id": "[variables('databaseContainerName')]",
          "partitionKey": {
            "paths": [
              "/id"
            ],
            "kind": "Hash"
          }
        },
        "options": {
          "autoscaleSettings": {
            "maxThroughput": 1000
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('databaseAccountName'), variables('databaseName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[variables('appLogAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "retentionInDays": 30,
        "features": {
          "searchVersion": 1
        },
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appApplicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('appLogAnalyticsWorkspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('appLogAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-12-01",
      "name": "[variables('appHostingPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "B1",
        "tier": "Basic"
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-12-01",
      "name": "[variables('appName')]",
      "location": "[parameters('location')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appHostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appApplicationInsightsName')), '2020-02-02').ConnectionString]"
            },
            {
              "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
              "value": "true"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "*"
            ]
          },
          "use32BitWorkerProcess": false,
          "linuxFxVersion": "PYTHON|3.12",
          "appCommandLine": "python -m pip install -r requirements.txt && python -m streamlit run app.py --server.port 8000 --server.address 0.0.0.0"
        },
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appApplicationInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appHostingPlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2023-11-01",
      "name": "[variables('searchServiceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "basic"
      },
      "properties": {
        "hostingMode": "default"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[variables('aiKeyvaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "createMode": "default",
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true,
        "enableRbacAuthorization": true,
        "enablePurgeProtection": true,
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "softDeleteRetentionInDays": 7,
        "tenantId": "[subscription().tenantId]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('aiStorageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2"
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('aiCognitiveServicesName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "S0"
      },
      "kind": "AIServices",
      "properties": {
        "apiProperties": {
          "statisticsEnabled": false
        }
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', variables('aiCognitiveServicesName'), 'gpt-4o-mini')]",
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "gpt-4o-mini",
          "version": "2024-07-18"
        }
      },
      "sku": {
        "name": "GlobalStandard",
        "capacity": 120
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiCognitiveServicesName'))]"
      ]
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', variables('aiCognitiveServicesName'), 'text-embedding-ada-002')]",
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "text-embedding-ada-002",
          "version": "2"
        }
      },
      "sku": {
        "name": "Standard",
        "capacity": 20
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiCognitiveServicesName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts/deployments', variables('aiCognitiveServicesName'), 'gpt-4o-mini')]"
      ]
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2024-07-01-preview",
      "name": "[variables('aiHubName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "kind": "hub",
      "properties": {
        "friendlyName": "[variables('aiHubFriendlyName')]",
        "description": "[variables('aiHubDescription')]",
        "keyVault": "[resourceId('Microsoft.KeyVault/vaults', variables('aiKeyvaultName'))]",
        "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', variables('aiStorageAccountName'))]",
        "applicationInsights": "[resourceId('Microsoft.Insights/components', variables('appApplicationInsightsName'))]",
        "publicNetworkAccess": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('aiKeyvaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('aiStorageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appApplicationInsightsName'))]"
      ]
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2024-07-01-preview",
      "name": "[variables('aiHubProjectName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "kind": "project",
      "properties": {
        "description": "Call Center AI Studio Project",
        "friendlyName": "Call Center",
        "hubResourceId": "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiHubName'))]",
        "hbiWorkspace": false,
        "v1LegacyMode": false,
        "publicNetworkAccess": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiHubName'))]"
      ]
    }
  ],
  "outputs": {
    "cosmosdbAccountName": {
      "type": "string",
      "value": "[variables('databaseAccountName')]"
    },
    "cosmosdbDatabaseName": {
      "type": "string",
      "value": "[variables('databaseName')]"
    },
    "cosmosdbContainerName": {
      "type": "string",
      "value": "[variables('databaseContainerName')]"
    },
    "aiCognitiveServicesName": {
      "type": "string",
      "value": "[variables('aiCognitiveServicesName')]"
    },
    "aiHubName": {
      "type": "string",
      "value": "[variables('aiHubName')]"
    },
    "aiHubProjectName": {
      "type": "string",
      "value": "[variables('aiHubProjectName')]"
    }
  }
}
